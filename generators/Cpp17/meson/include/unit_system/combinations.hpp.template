#pragma once

#include "unit_system/units.hpp"

#ifndef UNIT_SYSTEM_EXPORT_MACRO
    #define UNIT_SYSTEM_EXPORT_MACRO
#endif

namespace sakurajin{
    namespace unit_system{
        {% for combination in combinations %}
        UNIT_SYSTEM_EXPORT_MACRO {{ combination.product }} operator*(const {{ combination.factor1 }}& v1, const {{ combination.factor2 }}& v2);
        UNIT_SYSTEM_EXPORT_MACRO {{ combination.factor2 }} operator/(const {{ combination.product }}& v1, const {{ combination.factor1 }}& v2);
        {% if combination.factor1 != combination.factor2 %}
        UNIT_SYSTEM_EXPORT_MACRO {{ combination.product }} operator*(const {{ combination.factor2 }}& v1, const {{ combination.factor1 }}& v2);
        UNIT_SYSTEM_EXPORT_MACRO {{ combination.factor1 }} operator/(const {{ combination.product }}& v1, const {{ combination.factor2 }}& v2);
        {% else %}
        UNIT_SYSTEM_EXPORT_MACRO {{ combination.product }} square(const {{ combination.factor1 }}& v1);
        {% endif %}
        {% endfor %}
    }
}
