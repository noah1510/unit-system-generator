#pragma once

{%if force_flat_headers %}
#include "units.hpp"
{% else %}
#include "unit_system/units.hpp"
{% endif %}

{% if export_macro %}
#ifndef {{ export_macro }}
    #define {{ export_macro }}
#endif
{% endif %}

namespace sakurajin{
    namespace unit_system{
        {% for combination in combinations %}
        {{ export_macro }} {{ combination.product }} operator*(const {{ combination.factor1 }}& v1, const {{ combination.factor2 }}& v2);
        {{ export_macro }} {{ combination.factor2 }} operator/(const {{ combination.product }}& v1, const {{ combination.factor1 }}& v2);
        {% if combination.factor1 != combination.factor2 %}
        {{ export_macro }} {{ combination.product }} operator*(const {{ combination.factor2 }}& v1, const {{ combination.factor1 }}& v2);
        {{ export_macro }} {{ combination.factor1 }} operator/(const {{ combination.product }}& v1, const {{ combination.factor2 }}& v2);
        {% else %}
        {{ export_macro }} {{ combination.product }} square(const {{ combination.factor1 }}& v1);
        {% endif %}
        {% endfor %}
    }
}
