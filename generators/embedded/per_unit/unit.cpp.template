#include "unit_system/{{ name }}.hpp"

using namespace sakurajin::unit_system;

{{ name }}::{{ name }}(): {{ name }}(0){}
{{ name }}::{{ name }}(unit_t<{{ unit_id }}> val): {{ name }}(val.value,val.multiplier){}
{{ name }}::{{ name }}(long double val): {{ name }}(val,1){}
{{ name }}::{{ name }}(long double val, long double mult ): unit_t<{{ unit_id }}>(val,mult){}
{{ name }}::{{ name }}(long double val, long double mult, long double offset ): unit_t<{{ unit_id }}>(val,mult,offset){}

{% if literals|length > 0 %}
{% for literal in literals %}
{% if extra_data.use_alternate_names %}
{{ name }} literals::operator "" _{{ literal.alternative }}(long double len){
    return {{ name }}{len,{{ literal.multiplier }}, {{ literal.offset }}};
}

{{ name }} literals::operator "" _{{ literal.alternative }}(unsigned long long int len){
    return {{ name }}{static_cast<long double>(len),{{ literal.multiplier }}, {{ literal.offset }}};
}
{% else %}
{{ name }} literals::operator "" _{{ literal.udl }}(long double len){
    return {{ name }}{len,{{ literal.multiplier }}, {{ literal.offset }}};
}

{{ name }} literals::operator "" _{{ literal.udl }}(unsigned long long int len){
    return {{ name }}{static_cast<long double>(len),{{ literal.multiplier }}, {{ literal.offset }}};
}
{% endif %}
{% endfor %}
{% endif %}
