name: create release

on:
  push:
    tags:
      - 'v*'

jobs:
  python_matrix:
    env:
      PYTHONIOENCODING: 'utf-8'
      PYTHONLEGACYWINDOWSSTDIO: 'utf-8'
      PYTHONUTF8: '1'
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-20.04", "ubuntu-22.04", "macos-latest", "windows-latest"]
        pythonVersion: ["3.11", "3.10", "3.9", "3.8"]

    name: ${{ matrix.os }} - python ${{ matrix.pythonVersion }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.pythonVersion }}

      - name: test the project
        run: python -m unittest tests/tests.py

      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: build-artifact-${{ matrix.os }}-${{ matrix.buildType }}-msys-${{ matrix.useMsys }}
          path: build

  release:
    name: "Release candidate"
    runs-on: "ubuntu-20.04"
    needs: [ python_matrix ]
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v3
      - name: "release"
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.CI_GITHUB_TOKEN }}"
          prerelease: ${{ contains(github.ref_name, '-rc') }}
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
